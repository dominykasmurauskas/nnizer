security:
  encoders:
    App\Entity\Contractor:
      algorithm: auto
    App\Entity\User:
      algorithm: auto

  providers:
    app_user_provider:
      entity: { class: App\Entity\Contractor, property: username }
    app_admin_provider:
      entity: { class: App\Entity\User, property: email }
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    admin:
        pattern: ^/admin
        anonymous: true
        provider: app_admin_provider
        guard:
          authenticators:
            - App\Security\UserAuthenticator
        logout:
          path: admin_logout
          target: admin_login
    main:
      anonymous: true
      provider: app_user_provider
      guard:
        authenticators:
          - App\Security\ContractorAuthenticator
      logout:
        path: app_logout
        invalidate_session: false
        success_handler: App\Security\LogoutHandler

  access_control:
    - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%env(SECURE_SCHEME)%' }
    - { path: ^/admin/login, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%env(SECURE_SCHEME)%' }
    - { path: ^/admin, role: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%' }
    - { path: ^/contractor/activate/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%env(SECURE_SCHEME)%' }
    - { path: ^/contractor, roles: ROLE_CONTRACTOR, requires_channel: '%env(SECURE_SCHEME)%' }
    - { path: ^/api/contractor, roles: ROLE_CONTRACTOR, requires_channel: '%env(SECURE_SCHEME)%' }
    - { path: ^/api/profile, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: '%env(SECURE_SCHEME)%' }
